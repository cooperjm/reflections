How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Instead of going through line after line of code it only showed the lines
	that had been changed.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Enables you to go back and work on the code before you messed something up, 
	or take the project in a different direction than you have been previously
	working on.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros- knowing that each commit should compile, and each commit should have a description
    Cons- Could forget to commit

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    The others are just not made for the purposes of keeping track of code. 
	The others are mainly focused on word documents and text files.

How can you use the commands git log and git diff to view the history of files?

    Git log will give you a history of commits, you can check the changes of 
	those commits with git diff

How might using version control make you more confident to make changes that
could break something?

    Because you call always go back to a working version

Now that you have your workspace set up, what do you want to try using Git for?

    version control for my projects
